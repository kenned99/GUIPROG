@page
@model IndexModel
@{
    ViewData["Title"] = "GPS Friends";
}



<style>
    /* Set the size of the div element that contains the map */
    #map {
        height: 400px; /* The height is 400 pixels */
        width: 100%; /* The width is the width of the web page */
    }
</style>

<h1>Here you are</h1>
<div id="map"></div>
<script>
    // Note: This example requires that you consent to location sharing when
    // prompted by your browser. If you see the error "The Geolocation service
    // failed.", it means you probably did not give permission for the browser to
    // locate you.
    //laver map element og giver det et latitude og longtitode
    var map, infoWindow;

    function initMap() {

        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 6,
            styles: [
                { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
                { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
                {
                    featureType: 'administrative.locality',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'poi',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'poi.park',
                    elementType: 'geometry',
                    stylers: [{ color: '#263c3f' }]
                },
                {
                    featureType: 'poi.park',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#6b9a76' }]
                },
                {
                    featureType: 'road',
                    elementType: 'geometry',
                    stylers: [{ color: '#38414e' }]
                },
                {
                    featureType: 'road',
                    elementType: 'geometry.stroke',
                    stylers: [{ color: '#212a37' }]
                },
                {
                    featureType: 'road',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#9ca5b3' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'geometry',
                    stylers: [{ color: '#746855' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'geometry.stroke',
                    stylers: [{ color: '#1f2835' }]
                },
                {
                    featureType: 'road.highway',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#f3d19c' }]
                },
                {
                    featureType: 'transit',
                    elementType: 'geometry',
                    stylers: [{ color: '#2f3948' }]
                },
                {
                    featureType: 'transit.station',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#d59563' }]
                },
                {
                    featureType: 'water',
                    elementType: 'geometry',
                    stylers: [{ color: '#17263c' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.fill',
                    stylers: [{ color: '#515c6d' }]
                },
                {
                    featureType: 'water',
                    elementType: 'labels.text.stroke',
                    stylers: [{ color: '#17263c' }]
                }
            ]
        });

        infoWindow = new google.maps.InfoWindow;

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                infoWindow.setPosition(pos);
                infoWindow.setContent('Location found.');
                infoWindow.open(map);
                map.setCenter(pos);
            }, function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
    }

</script>

<!--Googles API-->
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC8ZjKyV_Q6cmshCmBMswH6JuQAkAzFdoo&callback=initMap">
</script>

<br>
<br>
<br>
<h3>Search for users!</h3>
<form class="form-inline float-left" method="get">
    <input class="form-control mb-5" type="search" asp-for="Filter" />
    <button class="btn btn-primary mb-5">Search</button>
</form>


<table class="table">
    <tr>
        <!--<div class="badge-info"> -->
        <th>ID</th>
        <th>Username</th>
        <th>E-mail</th>
        <th>Latitude</th>
        <th>Longitude</th>
        <th>Chat</th>
    </tr>
    <!--TODO: Add logged in users information here-->

    @foreach (var Mem in Model.Members)
    {
        <tr>
            <td>@Mem.Id</td>
            <td>@Mem.Username</td>
            <td>@Mem.Email</td>
            <td>@Mem.LastKnownLocation?.Latitude</td>
            <td>@Mem.LastKnownLocation?.Longtitude</td>
            <td><button class="btn btn-primary">Chat</button></td>
        </tr>
    }
</table>


<style>
    .slidecontainer {
        width: 100%;
    }

    .slider {
        -webkit-appearance: none;
        width: 100%;
        height: 25px;
        background: #d3d3d3;
        outline: none;
        opacity: 0.7;
        -webkit-transition: .2s;
        transition: opacity .2s;
    }

        .slider:hover {
            opacity: 1;
        }

        .slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 25px;
            height: 25px;
            background: #4CAF50;
            cursor: pointer;
        }

        .slider::-moz-range-thumb {
            width: 25px;
            height: 25px;
            background: #4CAF50;
            cursor: pointer;
        }
</style>


<div class="slidecontainer">
    <p>Zoom slider</p>
    <input type="range" min="100" max="2000" value="1" class="slider" id="myRange">
    <p>Value: <a id="sliderValue"></a></p>
</div>

<script>

    var slider = document.getElementById("myRange");
    var output = document.getElementById("sliderValue");
    output.innerHTML = slider.value;

    slider.oninput = function () {
        output.innerHTML = this.value;
    }

</script>


<h3>Canvas</h3>
<input type="hidden" value="@Model.MemberId" id="sessionUser" />
<div style=" display: block; margin: 0 auto;">

    <canvas id="canvas"
            width="1000"
            height="1000">
    </canvas>

</div>

<!--Modal (chat funktion)-->
<div class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chat</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                    
                    </div>
                </div>
                <div class="messageBox"></div>
                <!--Chat text area-->
                <div class="input-group">
                    <div class="input-group-prepend"></div>
                    <textarea class="form-control inputTextArea" aria-label="With textarea" placeholder="write your text here!"></textarea>
                </div>
                <input type="hidden" class="recipientId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary SendButton">Send</button>
            </div>
        </div>
    </div>
</div>